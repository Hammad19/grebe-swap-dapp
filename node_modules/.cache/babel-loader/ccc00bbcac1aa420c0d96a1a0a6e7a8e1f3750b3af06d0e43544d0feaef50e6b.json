{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\OneDrive\\\\Desktop\\\\Mudex-Latest\\\\mudex\\\\src\\\\components\\\\Swap\\\\Swap.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport settings from \"../../../src/assets/Icons/settings.png\";\nimport eth from \"../../../src/assets/Icons/eth.png\";\nimport { Input, Popover, Radio, Modal, message } from \"antd\";\nimport { ArrowDownOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { FileArrowDown } from \"react-bootstrap-icons\";\nimport { Button } from \"react-bootstrap\";\nimport TokenModal from \"../Modals/TokenModal\";\nimport arrow from \"../../../src/assets/Icons/swap.png\";\nimport { Connection, PublicKey, LAMPORTS_PER_SOL, Keypair, Transaction } from '@solana/web3.js';\nimport { AnchorProvider, BN, Program, Provider, web3 } from '@project-serum/anchor';\nimport { TypeDef } from \"@project-serum/anchor/dist/cjs/program/namespace/types\";\nimport { utf8 } from \"@project-serum/anchor/dist/cjs/utils/bytes\";\nimport { TOKEN_PROGRAM_ID, createMint, createMintToInstruction } from \"@solana/spl-token\";\nimport idl from './idl.json';\nimport { PhantomWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport { ConnectionProvider, useWallet, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletModalProvider, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nrequire('@solana/wallet-adapter-react-ui/styles.css');\nconst wallets = [/* view list of available wallets at https://github.com/solana-labs/wallet-adapter#wallets */\nnew PhantomWalletAdapter()];\nconst {\n  SystemProgram\n} = web3;\nconst opts = {\n  preflightCommitment: \"processed\"\n};\nconst programID = new PublicKey(idl.metadata.address);\nexport default function Swap() {\n  _s();\n  const wallet = useWallet();\n  async function getProvider() {\n    /* create the provider and return it to the caller */\n    /* network set to local network for now */\n    const network = \"https://api.devnet.solana.com\";\n    const connection = new Connection(network, opts.preflightCommitment);\n    return new AnchorProvider(connection, wallet, opts.preflightCommitment);\n  }\n  const ammAcc = Keypair.generate(); // The nft creator state account\n\n  const payer = Keypair.generate(); // payer keypair to allowcate airdropped funds\n  const initializerMainAccount = Keypair.generate(); // initializer (or main operator) account\n  let mintA = null;\n  let mintB = null;\n  let mintLP = null;\n  let tokenAata = null;\n  let tokenBata = null;\n  let feeAta = null;\n  let destinationLPAccount = null;\n  let [swap_authority_pda, authority_bump] = web3.PublicKey.findProgramAddressSync(\n  // Use findProgram Address to generate PDA\n  [ammAcc.publicKey.toBuffer()], programID);\n\n  // Pool fees\n  const TRADING_FEE_NUMERATOR = 25;\n  const TRADING_FEE_DENOMINATOR = 10000;\n  const OWNER_TRADING_FEE_NUMERATOR = 5;\n  const OWNER_TRADING_FEE_DENOMINATOR = 10000;\n  const OWNER_WITHDRAW_FEE_NUMERATOR = 1;\n  const OWNER_WITHDRAW_FEE_DENOMINATOR = 6;\n  const HOST_FEE_NUMERATOR = 20;\n  const HOST_FEE_DENOMINATOR = 100;\n\n  // AMM curve type\n  const CurveType = Object.freeze({\n    ConstantProduct: 0,\n    // Constant product curve, Uniswap-style\n    ConstantPrice: 1,\n    // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\n    Offset: 3 // Offset curve, like Uniswap, but with an additional offset on the token B side\n  });\n\n  async function setupState() {\n    const provider = await getProvider();\n    // Airdrop 1000 SOL to payer\n    await provider.connection.confirmTransaction(await provider.connection.requestAirdrop(payer.publicKey, 1000000000), \"confirmed\");\n\n    // Payer funds initializer main account\n    await provider.send(\n    // Trigger a transaction: args --> 1. Transaction 2. signer[]\n    (() => {\n      const tx = new Transaction(); // Create an empty Transaction called tx (NOTE: one Transaction can contain multi instructions)\n      tx.add(\n      // Add first instruction into tx\n      SystemProgram.transfer({\n        // First transaction is \"SystemProgram.transfer\" to fund SOL from payer to initializer's main account\n        fromPubkey: payer.publicKey,\n        toPubkey: initializerMainAccount.publicKey,\n        lamports: 900000000\n      }));\n      return tx;\n    })(), [payer]);\n    mintA = await createMint(provider.connection, payer, payer.publicKey, null, 0, TOKEN_PROGRAM_ID);\n    mintB = await createMint(provider.connection, payer, payer.publicKey, null, 0, TOKEN_PROGRAM_ID);\n    mintLP = await createMint(provider.connection, payer, swap_authority_pda, null, 0, TOKEN_PROGRAM_ID);\n    tokenAata = await mintA.createAccount(swap_authority_pda);\n    tokenBata = await mintB.createAccount(swap_authority_pda);\n    feeAta = await mintLP.createAccount(initializerMainAccount.publicKey);\n    destinationLPAccount = await mintLP.createAccount(initializerMainAccount.publicKey);\n\n    // Check all account state\n    console.log(\"payer's address\", payer.publicKey.toString());\n    /**@payer Address */\n    let payerBalance = await provider.connection.getBalance(payer.publicKey);\n    console.log(\"payer's balance: \", payerBalance / 1e9, \" SOL\"); // List payer's SOL balance\n    console.log(\"ammAcc: \", ammAcc.publicKey.toString());\n    /**@amm Address */\n\n    let initializerBal = await provider.connection.getBalance(initializerMainAccount.publicKey);\n    /**@initializer Address */\n    console.log(\"initializer's account: \", initializerMainAccount.publicKey.toString());\n    console.log(\"initializer's balance: \", initializerBal / 1e9, \" SOL\"); // List initializer's SOL balance\n    console.log(\"authority pda: \", swap_authority_pda.toBase58());\n    console.log(\"mint A pubkey: \", mintA.publicKey.toBase58());\n    console.log(\"mint B pubkey: \", mintB.publicKey.toBase58());\n    console.log(\"mint LP pubkey: \", mintLP.publicKey.toBase58());\n    console.log(\"token a ata: \", tokenAata.toBase58());\n    console.log(\"token B ata: \", tokenBata.toBase58());\n    console.log(\"fee pubkey: \", feeAta.toBase58());\n    console.log(\"dist ata: \", destinationLPAccount.toBase58());\n  }\n  async function initializeState() {\n    const provider = await getProvider();\n    const program = new Program(idl, programID, provider);\n    await createMintToInstruction(tokenAata, mintA, payer, 10000000);\n    await createMintToInstruction(tokenBata, mintB, payer, 10000000);\n\n    // await mintA.mintTo(tokenAata, payer, [payer], 10000000);\n    // await mintB.mintTo(tokenBata, payer, [payer], 10000000);\n    const fees_input = {\n      tradeFeeNumerator: new BN(TRADING_FEE_NUMERATOR),\n      tradeFeeDenominator: new BN(TRADING_FEE_DENOMINATOR),\n      ownerTradeFeeNumerator: new BN(OWNER_TRADING_FEE_NUMERATOR),\n      ownerTradeFeeDenominator: new BN(OWNER_TRADING_FEE_DENOMINATOR),\n      ownerWithdrawFeeNumerator: new BN(OWNER_WITHDRAW_FEE_NUMERATOR),\n      ownerWithdrawFeeDenominator: new BN(OWNER_WITHDRAW_FEE_DENOMINATOR),\n      hostFeeNumerator: new BN(HOST_FEE_NUMERATOR),\n      hostFeeDenominator: new BN(HOST_FEE_DENOMINATOR)\n    };\n    const curve_input = {\n      curveType: CurveType.ConstantProduct,\n      curveParameters: new BN(0)\n    };\n    const tx = await program.rpc.initialize(fees_input, curve_input, {\n      accounts: {\n        authority: swap_authority_pda,\n        initializer: initializerMainAccount.publicKey,\n        amm: ammAcc.publicKey,\n        poolMint: mintLP.publicKey,\n        tokenA: tokenAata,\n        tokenB: tokenBata,\n        feeAccount: feeAta,\n        destination: destinationLPAccount,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        systemProgram: SystemProgram.programId\n      },\n      // instructions: [await program.account.amm.createInstruction(ammAcc)],\n      signers: [ammAcc, initializerMainAccount]\n      // signers: [ammAcc],\n    });\n\n    console.log(\"Your transaction signature\", tx);\n    let data = await program.account.amm.fetch(ammAcc.publicKey);\n    console.log(\"Amm pool is initialized\", data.isInitialized);\n  }\n  async function swapToken() {\n    const provider = await getProvider();\n    const program = new Program(idl, programID, provider);\n    let tokenAamtToSwap = 10000;\n    let minTokenBamtToGet = 1;\n    // Create a new Keypair as an escrow to be delegated to transfer certain amount of source token from initializer's source token ata (in this case tokenA)\n    const userTransferAuthority = Keypair.generate();\n    // Create a source token (tokenA) ATA for initializer\n    let userAccountA = await mintA.createAccount(initializerMainAccount.publicKey);\n    // Mint some source token (tokenA) ot initalizers's ATA.\n    await mintA.mintTo(userAccountA, payer.publicKey, [], tokenAamtToSwap);\n    // delegate userTransferAuthority to transfer some source token (tokenA) from initializer's ATA\n    await mintA.approve(userAccountA, userTransferAuthority.publicKey, initializerMainAccount, [], tokenAamtToSwap);\n    // Create a destination token (tokenB) ATA for initializer\n    let userAccountB = await mintB.createAccount(initializerMainAccount.publicKey);\n    let poolAccount = await mintLP.createAccount(payer.publicKey);\n    // Trigger swap\n    await program.rpc.swap(new BN(tokenAamtToSwap), new BN(minTokenBamtToGet), {\n      accounts: {\n        authority: swap_authority_pda,\n        amm: ammAcc.publicKey,\n        userTransferAuthority: userTransferAuthority.publicKey,\n        sourceInfo: userAccountA,\n        destinationInfo: userAccountB,\n        swapSource: tokenAata,\n        swapDestination: tokenBata,\n        poolMint: mintLP.publicKey,\n        feeAccount: feeAta,\n        tokenProgram: TOKEN_PROGRAM_ID,\n        hostFeeAccount: poolAccount\n      },\n      signers: [userTransferAuthority]\n    });\n    console.log(\"transferAuthority acc: \", userTransferAuthority.publicKey.toBase58());\n    console.log(\"swapper's source token - tokenA ATA: \", userAccountA.toBase58());\n    console.log(\"swapper's destination token - tokenB ATA: \", userAccountB.toBase58());\n    console.log(\"host Fee Acc: \", poolAccount.toBase58());\n    let userAccountAInfo = await mintA.getAccountInfo(userAccountA);\n    console.log(\"swapper's source token - tokenA balance: \", userAccountAInfo.amount.toNumber());\n    let userAccountBInfo = await mintB.getAccountInfo(userAccountB);\n    console.log(\"swapper's destination token - tokenB balance: \", userAccountBInfo.amount.toNumber());\n    let poolAccountInfo = await mintLP.getAccountInfo(poolAccount);\n    console.log(\"host fee account balance: \", poolAccountInfo.amount.toNumber());\n    let tokenAataInfo = await mintA.getAccountInfo(tokenAata);\n    console.log(\"pool tokenA: \", tokenAataInfo.amount.toNumber());\n    let tokenBataInfo = await mintB.getAccountInfo(tokenBata);\n    console.log(\"pool tokenB: \", tokenBataInfo.amount.toNumber());\n    let feeAtaInfo = await mintLP.getAccountInfo(feeAta);\n    console.log(\"Owner fee balance\", feeAtaInfo.amount.toNumber());\n  }\n  const [modalShow, setModalShow] = React.useState(false);\n  const [modalShow2, setModalShow2] = React.useState(false);\n  const tokenDetails = [{\n    name: \"ETH\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"BTX\",\n    icon: eth\n  }, {\n    name: \"BXG\",\n    icon: eth\n  }, {\n    name: \"WETH\",\n    icon: eth\n  }, {\n    name: \"ZAR\",\n    icon: eth\n  }, {\n    name: \"USD\",\n    icon: eth\n  }, {\n    name: \"XTG\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }, {\n    name: \"MUD\",\n    icon: eth\n  }];\n  const swap = () => {\n    //swap logic\n\n    const temp = selectedToken1;\n    setSelectedToken1(selectedToken2);\n    setSelectedToken2(temp);\n  };\n  const [selectedToken1, setSelectedToken1] = React.useState(tokenDetails[0]);\n  const [selectedToken2, setSelectedToken2] = React.useState(tokenDetails[2]);\n  const [slippage, setSlippage] = React.useState(2.5);\n  const handleSlippage = e => {\n    setSlippage(e.target.value);\n  };\n  const settingsContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Slippage Tolerance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Radio.Group, {\n        onChange: handleSlippage,\n        value: slippage,\n        children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 0.5,\n          children: \"0.5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 2.5,\n          children: \"2.5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n          value: 5,\n          children: \"5%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n  return (\n    /*#__PURE__*/\n    // center div with glassmorphism\n    _jsxDEV(\"div\", {\n      className: \"col-12 col-sm-8  col-md-6\\r col-lg-6 col-xl-3\",\n      style: {\n        background: \"rgba(0, 0, 0, 0.44)\",\n        borderRadius: \"16px\",\n        boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\n        backdropFilter: \"blur(0px)\",\n        border: \"1px solid whitesmoke\",\n        height: \"400px\",\n        fontFamily: \"sans-serif\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row my-3\",\n          style: {\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-9  mx-1\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: \"#f8fdfd\",\n                marginRight: \"150px\"\n              },\n              children: \"music-exchanger\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-2 mx-1\",\n            children: /*#__PURE__*/_jsxDEV(Popover, {\n              title: \"Settings\",\n              trigger: \"click\",\n              placement: \"bottomRight\",\n              content: settingsContent,\n              children: /*#__PURE__*/_jsxDEV(SettingOutlined, {\n                className: \"cog\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: \"absolute\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row my-1\",\n            style: {\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 \",\n              style: {\n                backgroundColor: \"#00214e\",\n                borderRadius: \"20px\",\n                height: \"80px\",\n                width: \"90%\",\n                border: \"1px solid rgba(255, 255, 255, 0.2)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-8\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    placeholder: \"0.0\",\n                    style: {\n                      marginTop: \"13px\",\n                      backgroundColor: \"transparent\",\n                      border: \"none\",\n                      color: \"white\",\n                      fontSize: \"30px\",\n                      outline: \"none\",\n                      placeholder: \"white\"\n                    },\n                    onFocus: e => e.target.style.outline = \"none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 499,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    setModalShow(true);\n                  },\n                  className: \"col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: \"#183964\",\n                      borderRadius: \"20px\",\n                      height: \"40px\",\n                      marginRight: \"0.1px\",\n                      marginTop: \"15px\",\n                      paddingTop: \"3px\"\n                    },\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        alt: \"coin\",\n                        src: selectedToken1.icon,\n                        style: {\n                          height: \"35px\",\n                          width: \"35px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 532,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 531,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"my-1 col-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                          className: \"text-light\",\n                          children: selectedToken1.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 543,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 542,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 541,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" my-1 col-5\",\n                      children: /*#__PURE__*/_jsxDEV(FileArrowDown, {\n                        size: 25,\n                        color: \"white\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 548,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 547,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 521,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"lightgray\"\n                    },\n                    children: \"Balance : $0.0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 516,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 497,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TokenModal, {\n            tokenDetails: tokenDetails,\n            show: modalShow,\n            onHide: () => setModalShow(false),\n            setSelectedToken: setSelectedToken1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row my-1\",\n            style: {\n              justifyContent: \"center\",\n              alignItems: \"center\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 \",\n              style: {\n                backgroundColor: \"#00214e\",\n                borderRadius: \"20px\",\n                height: \"80px\",\n                width: \"90%\",\n                border: \"1px solid rgba(255, 255, 255, 0.2)\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"col-8\",\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    placeholder: \"0.0\",\n                    style: {\n                      marginTop: \"13px\",\n                      backgroundColor: \"transparent\",\n                      border: \"none\",\n                      color: \"white\",\n                      fontSize: \"30px\",\n                      outline: \"none\",\n                      placeholder: \"white\"\n                    },\n                    onFocus: e => e.target.style.outline = \"none\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => {\n                    setModalShow2(true);\n                  },\n                  className: \"col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      backgroundColor: \"#183964\",\n                      borderRadius: \"20px\",\n                      height: \"40px\",\n                      marginRight: \"0.1px\",\n                      marginTop: \"15px\",\n                      paddingTop: \"3px\"\n                    },\n                    className: \"row\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-3\",\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        alt: \"coin\",\n                        src: selectedToken2.icon,\n                        style: {\n                          height: \"35px\",\n                          width: \"35px\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 618,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"my-1 col-4\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                          className: \"text-light\",\n                          children: selectedToken2.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 629,\n                          columnNumber: 49\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 628,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 627,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \" my-1 col-5\",\n                      children: /*#__PURE__*/_jsxDEV(FileArrowDown, {\n                        size: 25,\n                        color: \"white\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 634,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    style: {\n                      color: \"lightgray\"\n                    },\n                    children: \"Balance : $0.0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 637,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TokenModal, {\n            tokenDetails: tokenDetails,\n            show: modalShow2,\n            onHide: () => setModalShow2(false),\n            setSelectedToken: setSelectedToken2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"\",\n          onClick: swap,\n          style: {\n            backgroundColor: \"rgba(5, 24, 57, 255)\",\n            borderRadius: \"75px\",\n            position: \"relative\",\n            marginTop: \"65px\",\n            justifyContent: \"center\",\n            alignItems: \"center\"\n          },\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12\",\n        style: {\n          position: \"absolute\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          className: \" my-5\",\n          onClick: setupState,\n          style: {\n            width: \"75%\",\n            height: \"50px\",\n            borderRadius: \"20px\",\n            backgroundColor: \"#006dfe\",\n            fontSize: \"25px\"\n\n            //transparent\n          },\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 9\n    }, this)\n  );\n}\n_s(Swap, \"ukHC9AYGJuxGlAwWmXCZv7vgSGU=\", false, function () {\n  return [useWallet];\n});\n_c = Swap;\nvar _c;\n$RefreshReg$(_c, \"Swap\");","map":{"version":3,"names":["React","settings","eth","Input","Popover","Radio","Modal","message","ArrowDownOutlined","SettingOutlined","FileArrowDown","Button","TokenModal","arrow","Connection","PublicKey","LAMPORTS_PER_SOL","Keypair","Transaction","AnchorProvider","BN","Program","Provider","web3","TypeDef","utf8","TOKEN_PROGRAM_ID","createMint","createMintToInstruction","idl","PhantomWalletAdapter","ConnectionProvider","useWallet","WalletProvider","WalletModalProvider","WalletMultiButton","jsxDEV","_jsxDEV","Fragment","_Fragment","require","wallets","SystemProgram","opts","preflightCommitment","programID","metadata","address","Swap","_s","wallet","getProvider","network","connection","ammAcc","generate","payer","initializerMainAccount","mintA","mintB","mintLP","tokenAata","tokenBata","feeAta","destinationLPAccount","swap_authority_pda","authority_bump","findProgramAddressSync","publicKey","toBuffer","TRADING_FEE_NUMERATOR","TRADING_FEE_DENOMINATOR","OWNER_TRADING_FEE_NUMERATOR","OWNER_TRADING_FEE_DENOMINATOR","OWNER_WITHDRAW_FEE_NUMERATOR","OWNER_WITHDRAW_FEE_DENOMINATOR","HOST_FEE_NUMERATOR","HOST_FEE_DENOMINATOR","CurveType","Object","freeze","ConstantProduct","ConstantPrice","Offset","setupState","provider","confirmTransaction","requestAirdrop","send","tx","add","transfer","fromPubkey","toPubkey","lamports","createAccount","console","log","toString","payerBalance","getBalance","initializerBal","toBase58","initializeState","program","fees_input","tradeFeeNumerator","tradeFeeDenominator","ownerTradeFeeNumerator","ownerTradeFeeDenominator","ownerWithdrawFeeNumerator","ownerWithdrawFeeDenominator","hostFeeNumerator","hostFeeDenominator","curve_input","curveType","curveParameters","rpc","initialize","accounts","authority","initializer","amm","poolMint","tokenA","tokenB","feeAccount","destination","tokenProgram","systemProgram","programId","signers","data","account","fetch","isInitialized","swapToken","tokenAamtToSwap","minTokenBamtToGet","userTransferAuthority","userAccountA","mintTo","approve","userAccountB","poolAccount","swap","sourceInfo","destinationInfo","swapSource","swapDestination","hostFeeAccount","userAccountAInfo","getAccountInfo","amount","toNumber","userAccountBInfo","poolAccountInfo","tokenAataInfo","tokenBataInfo","feeAtaInfo","modalShow","setModalShow","useState","modalShow2","setModalShow2","tokenDetails","name","icon","temp","selectedToken1","setSelectedToken1","selectedToken2","setSelectedToken2","slippage","setSlippage","handleSlippage","e","target","value","settingsContent","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","onChange","className","style","background","borderRadius","boxShadow","backdropFilter","border","height","fontFamily","justifyContent","color","marginRight","title","trigger","placement","content","position","alignItems","backgroundColor","width","type","placeholder","marginTop","fontSize","outline","onFocus","onClick","paddingTop","alt","src","size","show","onHide","setSelectedToken","variant","_c","$RefreshReg$"],"sources":["C:/Users/dell/OneDrive/Desktop/Mudex-Latest/mudex/src/components/Swap/Swap.js"],"sourcesContent":["import React from \"react\";\r\nimport settings from \"../../../src/assets/Icons/settings.png\";\r\nimport eth from \"../../../src/assets/Icons/eth.png\";\r\nimport {Input, Popover, Radio, Modal, message} from \"antd\";\r\nimport {ArrowDownOutlined, SettingOutlined} from \"@ant-design/icons\";\r\nimport {FileArrowDown} from \"react-bootstrap-icons\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport TokenModal from \"../Modals/TokenModal\";\r\nimport arrow from \"../../../src/assets/Icons/swap.png\";\r\n\r\nimport {Connection, PublicKey, LAMPORTS_PER_SOL, Keypair, Transaction} from '@solana/web3.js';\r\nimport {AnchorProvider, BN, Program, Provider, web3} from '@project-serum/anchor';\r\nimport {TypeDef} from \"@project-serum/anchor/dist/cjs/program/namespace/types\";\r\nimport {utf8} from \"@project-serum/anchor/dist/cjs/utils/bytes\";\r\nimport {TOKEN_PROGRAM_ID, createMint, createMintToInstruction} from \"@solana/spl-token\";\r\nimport idl from './idl.json';\r\n\r\nimport {PhantomWalletAdapter} from '@solana/wallet-adapter-wallets';\r\nimport {ConnectionProvider, useWallet, WalletProvider} from '@solana/wallet-adapter-react';\r\nimport {WalletModalProvider, WalletMultiButton} from '@solana/wallet-adapter-react-ui';\r\n\r\nrequire('@solana/wallet-adapter-react-ui/styles.css');\r\n\r\nconst wallets = [\r\n    /* view list of available wallets at https://github.com/solana-labs/wallet-adapter#wallets */\r\n    new PhantomWalletAdapter()\r\n\r\n]\r\n\r\nconst {SystemProgram} = web3;\r\nconst opts = {\r\n    preflightCommitment: \"processed\"\r\n}\r\nconst programID = new PublicKey(idl.metadata.address);\r\n\r\nexport default function Swap() {\r\n    const wallet = useWallet();\r\n\r\n    async function getProvider() {\r\n        /* create the provider and return it to the caller */\r\n        /* network set to local network for now */\r\n        const network = \"https://api.devnet.solana.com\";\r\n        const connection = new Connection(network, opts.preflightCommitment);\r\n\r\n        return new AnchorProvider(\r\n            connection, wallet, opts.preflightCommitment,\r\n        );\r\n    }\r\n\r\n    const ammAcc = Keypair.generate(); // The nft creator state account\r\n\r\n    const payer = Keypair.generate(); // payer keypair to allowcate airdropped funds\r\n    const initializerMainAccount = Keypair.generate(); // initializer (or main operator) account\r\n    let mintA = null;\r\n    let mintB = null;\r\n    let mintLP = null;\r\n    let tokenAata = null;\r\n    let tokenBata = null;\r\n    let feeAta = null;\r\n    let destinationLPAccount = null;\r\n    let [swap_authority_pda, authority_bump] =\r\n        web3.PublicKey.findProgramAddressSync(\r\n            // Use findProgram Address to generate PDA\r\n            [ammAcc.publicKey.toBuffer()],\r\n            programID\r\n        );\r\n\r\n    // Pool fees\r\n    const TRADING_FEE_NUMERATOR = 25;\r\n    const TRADING_FEE_DENOMINATOR = 10000;\r\n    const OWNER_TRADING_FEE_NUMERATOR = 5;\r\n    const OWNER_TRADING_FEE_DENOMINATOR = 10000;\r\n    const OWNER_WITHDRAW_FEE_NUMERATOR = 1;\r\n    const OWNER_WITHDRAW_FEE_DENOMINATOR = 6;\r\n    const HOST_FEE_NUMERATOR = 20;\r\n    const HOST_FEE_DENOMINATOR = 100;\r\n\r\n    // AMM curve type\r\n    const CurveType = Object.freeze({\r\n        ConstantProduct: 0, // Constant product curve, Uniswap-style\r\n        ConstantPrice: 1, // Constant price curve, always X amount of A token for 1 B token, where X is defined at init\r\n        Offset: 3, // Offset curve, like Uniswap, but with an additional offset on the token B side\r\n    });\r\n\r\n    async function setupState() {\r\n        const provider = await getProvider();\r\n        // Airdrop 1000 SOL to payer\r\n        await provider.connection.confirmTransaction(\r\n            await provider.connection.requestAirdrop(payer.publicKey, 1000000000),\r\n            \"confirmed\"\r\n        );\r\n\r\n        // Payer funds initializer main account\r\n        await provider.send(\r\n            // Trigger a transaction: args --> 1. Transaction 2. signer[]\r\n            (() => {\r\n                const tx = new Transaction(); // Create an empty Transaction called tx (NOTE: one Transaction can contain multi instructions)\r\n                tx.add(\r\n                    // Add first instruction into tx\r\n                    SystemProgram.transfer({\r\n                        // First transaction is \"SystemProgram.transfer\" to fund SOL from payer to initializer's main account\r\n                        fromPubkey: payer.publicKey,\r\n                        toPubkey: initializerMainAccount.publicKey,\r\n                        lamports: 900000000,\r\n                    })\r\n                );\r\n                return tx;\r\n            })(),\r\n            [payer]\r\n        );\r\n        mintA = await createMint(\r\n            provider.connection,\r\n            payer,\r\n            payer.publicKey,\r\n            null,\r\n            0,\r\n            TOKEN_PROGRAM_ID\r\n        );\r\n        mintB = await createMint(\r\n            provider.connection,\r\n            payer,\r\n            payer.publicKey,\r\n            null,\r\n            0,\r\n            TOKEN_PROGRAM_ID\r\n        );\r\n        mintLP = await createMint(\r\n            provider.connection,\r\n            payer,\r\n            swap_authority_pda,\r\n            null,\r\n            0,\r\n            TOKEN_PROGRAM_ID\r\n        );\r\n        tokenAata = await mintA.createAccount(swap_authority_pda);\r\n        tokenBata = await mintB.createAccount(swap_authority_pda);\r\n        feeAta = await mintLP.createAccount(initializerMainAccount.publicKey);\r\n        destinationLPAccount = await mintLP.createAccount(\r\n            initializerMainAccount.publicKey\r\n        );\r\n\r\n        // Check all account state\r\n        console.log(\r\n            \"payer's address\",\r\n            payer.publicKey.toString()\r\n        );\r\n        /**@payer Address */\r\n        let payerBalance = await provider.connection.getBalance(payer.publicKey);\r\n        console.log(\"payer's balance: \", payerBalance / 1e9, \" SOL\"); // List payer's SOL balance\r\n        console.log(\"ammAcc: \", ammAcc.publicKey.toString());\r\n        /**@amm Address */\r\n\r\n        let initializerBal = await provider.connection.getBalance(\r\n            initializerMainAccount.publicKey\r\n        );\r\n        /**@initializer Address */\r\n        console.log(\r\n            \"initializer's account: \",\r\n            initializerMainAccount.publicKey.toString()\r\n        );\r\n        console.log(\"initializer's balance: \", initializerBal / 1e9, \" SOL\"); // List initializer's SOL balance\r\n        console.log(\"authority pda: \", swap_authority_pda.toBase58());\r\n        console.log(\"mint A pubkey: \", mintA.publicKey.toBase58());\r\n        console.log(\"mint B pubkey: \", mintB.publicKey.toBase58());\r\n        console.log(\"mint LP pubkey: \", mintLP.publicKey.toBase58());\r\n        console.log(\"token a ata: \", tokenAata.toBase58());\r\n        console.log(\"token B ata: \", tokenBata.toBase58());\r\n        console.log(\"fee pubkey: \", feeAta.toBase58());\r\n        console.log(\"dist ata: \", destinationLPAccount.toBase58());\r\n    }\r\n\r\n    async function initializeState() {\r\n        const provider = await getProvider();\r\n        const program = new Program(idl, programID, provider);\r\n\r\n        await createMintToInstruction(tokenAata, mintA, payer, 10000000);\r\n        await createMintToInstruction(tokenBata, mintB, payer, 10000000);\r\n\r\n        // await mintA.mintTo(tokenAata, payer, [payer], 10000000);\r\n        // await mintB.mintTo(tokenBata, payer, [payer], 10000000);\r\n        const fees_input = {\r\n            tradeFeeNumerator: new BN(TRADING_FEE_NUMERATOR),\r\n            tradeFeeDenominator: new BN(TRADING_FEE_DENOMINATOR),\r\n            ownerTradeFeeNumerator: new BN(OWNER_TRADING_FEE_NUMERATOR),\r\n            ownerTradeFeeDenominator: new BN(OWNER_TRADING_FEE_DENOMINATOR),\r\n            ownerWithdrawFeeNumerator: new BN(OWNER_WITHDRAW_FEE_NUMERATOR),\r\n            ownerWithdrawFeeDenominator: new BN(OWNER_WITHDRAW_FEE_DENOMINATOR),\r\n            hostFeeNumerator: new BN(HOST_FEE_NUMERATOR),\r\n            hostFeeDenominator: new BN(HOST_FEE_DENOMINATOR),\r\n        };\r\n\r\n        const curve_input = {\r\n            curveType: CurveType.ConstantProduct,\r\n            curveParameters: new BN(0),\r\n        };\r\n\r\n        const tx = await program.rpc.initialize(fees_input, curve_input, {\r\n            accounts: {\r\n                authority: swap_authority_pda,\r\n                initializer: initializerMainAccount.publicKey,\r\n                amm: ammAcc.publicKey,\r\n                poolMint: mintLP.publicKey,\r\n                tokenA: tokenAata,\r\n                tokenB: tokenBata,\r\n                feeAccount: feeAta,\r\n                destination: destinationLPAccount,\r\n                tokenProgram: TOKEN_PROGRAM_ID,\r\n                systemProgram: SystemProgram.programId,\r\n            },\r\n            // instructions: [await program.account.amm.createInstruction(ammAcc)],\r\n            signers: [ammAcc, initializerMainAccount],\r\n            // signers: [ammAcc],\r\n        });\r\n        console.log(\"Your transaction signature\", tx);\r\n        let data = await program.account.amm.fetch(ammAcc.publicKey);\r\n        console.log(\"Amm pool is initialized\", data.isInitialized);\r\n    }\r\n\r\n    async function swapToken() {\r\n        const provider = await getProvider();\r\n        const program = new Program(idl, programID, provider);\r\n\r\n        let tokenAamtToSwap = 10000;\r\n        let minTokenBamtToGet = 1;\r\n        // Create a new Keypair as an escrow to be delegated to transfer certain amount of source token from initializer's source token ata (in this case tokenA)\r\n        const userTransferAuthority = Keypair.generate();\r\n        // Create a source token (tokenA) ATA for initializer\r\n        let userAccountA = await mintA.createAccount(\r\n            initializerMainAccount.publicKey\r\n        );\r\n        // Mint some source token (tokenA) ot initalizers's ATA.\r\n        await mintA.mintTo(userAccountA, payer.publicKey, [], tokenAamtToSwap);\r\n        // delegate userTransferAuthority to transfer some source token (tokenA) from initializer's ATA\r\n        await mintA.approve(\r\n            userAccountA,\r\n            userTransferAuthority.publicKey,\r\n            initializerMainAccount,\r\n            [],\r\n            tokenAamtToSwap\r\n        );\r\n        // Create a destination token (tokenB) ATA for initializer\r\n        let userAccountB = await mintB.createAccount(\r\n            initializerMainAccount.publicKey\r\n        );\r\n        let poolAccount = await mintLP.createAccount(payer.publicKey);\r\n        // Trigger swap\r\n        await program.rpc.swap(\r\n            new BN(tokenAamtToSwap),\r\n            new BN(minTokenBamtToGet),\r\n            {\r\n                accounts: {\r\n                    authority: swap_authority_pda,\r\n                    amm: ammAcc.publicKey,\r\n                    userTransferAuthority: userTransferAuthority.publicKey,\r\n                    sourceInfo: userAccountA,\r\n                    destinationInfo: userAccountB,\r\n                    swapSource: tokenAata,\r\n                    swapDestination: tokenBata,\r\n                    poolMint: mintLP.publicKey,\r\n                    feeAccount: feeAta,\r\n                    tokenProgram: TOKEN_PROGRAM_ID,\r\n                    hostFeeAccount: poolAccount,\r\n                },\r\n                signers: [userTransferAuthority],\r\n            }\r\n        );\r\n        console.log(\r\n            \"transferAuthority acc: \",\r\n            userTransferAuthority.publicKey.toBase58()\r\n        );\r\n        console.log(\r\n            \"swapper's source token - tokenA ATA: \",\r\n            userAccountA.toBase58()\r\n        );\r\n        console.log(\r\n            \"swapper's destination token - tokenB ATA: \",\r\n            userAccountB.toBase58()\r\n        );\r\n        console.log(\"host Fee Acc: \", poolAccount.toBase58());\r\n        let userAccountAInfo = await mintA.getAccountInfo(userAccountA);\r\n        console.log(\r\n            \"swapper's source token - tokenA balance: \",\r\n            userAccountAInfo.amount.toNumber()\r\n        );\r\n        let userAccountBInfo = await mintB.getAccountInfo(userAccountB);\r\n        console.log(\r\n            \"swapper's destination token - tokenB balance: \",\r\n            userAccountBInfo.amount.toNumber()\r\n        );\r\n        let poolAccountInfo = await mintLP.getAccountInfo(poolAccount);\r\n        console.log(\r\n            \"host fee account balance: \",\r\n            poolAccountInfo.amount.toNumber()\r\n        );\r\n        let tokenAataInfo = await mintA.getAccountInfo(tokenAata);\r\n        console.log(\"pool tokenA: \", tokenAataInfo.amount.toNumber());\r\n        let tokenBataInfo = await mintB.getAccountInfo(tokenBata);\r\n        console.log(\"pool tokenB: \", tokenBataInfo.amount.toNumber());\r\n        let feeAtaInfo = await mintLP.getAccountInfo(feeAta);\r\n        console.log(\"Owner fee balance\", feeAtaInfo.amount.toNumber());\r\n    }\r\n\r\n    const [modalShow, setModalShow] = React.useState(false);\r\n    const [modalShow2, setModalShow2] = React.useState(false);\r\n\r\n    const tokenDetails = [\r\n        {\r\n            name: \"ETH\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"BTX\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"BXG\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"WETH\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"ZAR\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"USD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"XTG\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n        {\r\n            name: \"MUD\",\r\n            icon: eth,\r\n        },\r\n    ];\r\n\r\n    const swap = () => {\r\n        //swap logic\r\n\r\n        const temp = selectedToken1;\r\n        setSelectedToken1(selectedToken2);\r\n        setSelectedToken2(temp);\r\n    };\r\n\r\n    const [selectedToken1, setSelectedToken1] = React.useState(tokenDetails[0]);\r\n    const [selectedToken2, setSelectedToken2] = React.useState(tokenDetails[2]);\r\n\r\n    const [slippage, setSlippage] = React.useState(2.5);\r\n\r\n    const handleSlippage = (e) => {\r\n        setSlippage(e.target.value);\r\n    };\r\n\r\n    const settingsContent = (\r\n        <>\r\n            <div>Slippage Tolerance</div>\r\n            <div>\r\n                <Radio.Group onChange={handleSlippage} value={slippage}>\r\n                    <Radio.Button value={0.5}>0.5%</Radio.Button>\r\n                    <Radio.Button value={2.5}>2.5%</Radio.Button>\r\n                    <Radio.Button value={5}>5%</Radio.Button>\r\n                </Radio.Group>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        // center div with glassmorphism\r\n        <div\r\n            className=\"col-12 col-sm-8  col-md-6\r\n       col-lg-6 col-xl-3\"\r\n            style={{\r\n                background: \"rgba(0, 0, 0, 0.44)\",\r\n                borderRadius: \"16px\",\r\n                boxShadow: \"0 4px 30px rgba(0, 0, 0, 0.1)\",\r\n                backdropFilter: \"blur(0px)\",\r\n                border: \"1px solid whitesmoke\",\r\n\r\n                height: \"400px\",\r\n\r\n                fontFamily: \"sans-serif\",\r\n            }}>\r\n            <div>\r\n                <div\r\n                    className=\"row my-3\"\r\n                    style={{\r\n                        justifyContent: \"space-between\",\r\n                    }}>\r\n                    <div className=\"col-9  mx-1\">\r\n                        <h4\r\n                            style={{\r\n                                color: \"#f8fdfd\",\r\n                                marginRight: \"150px\",\r\n                            }}>\r\n                            music-exchanger\r\n                        </h4>\r\n                    </div>\r\n\r\n                    <div className=\"col-2 mx-1\">\r\n                        <Popover\r\n                            title=\"Settings\"\r\n                            trigger=\"click\"\r\n                            placement=\"bottomRight\"\r\n                            content={settingsContent}>\r\n                            <SettingOutlined className=\"cog\"/>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        position: \"absolute\",\r\n                    }}>\r\n                    <div\r\n                        className=\"row my-1\"\r\n                        style={{\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}>\r\n                        <div\r\n                            className=\"col-12 \"\r\n                            style={{\r\n                                backgroundColor: \"#00214e\",\r\n                                borderRadius: \"20px\",\r\n                                height: \"80px\",\r\n                                width: \"90%\",\r\n                                border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n                            }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"0.0\"\r\n                                        style={{\r\n                                            marginTop: \"13px\",\r\n\r\n                                            backgroundColor: \"transparent\",\r\n                                            border: \"none\",\r\n                                            color: \"white\",\r\n                                            fontSize: \"30px\",\r\n                                            outline: \"none\",\r\n                                            placeholder: \"white\",\r\n                                        }}\r\n                                        onFocus={(e) => (e.target.style.outline = \"none\")}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setModalShow(true);\r\n                                    }}\r\n                                    className=\"col-4\">\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundColor: \"#183964\",\r\n                                            borderRadius: \"20px\",\r\n                                            height: \"40px\",\r\n                                            marginRight: \"0.1px\",\r\n                                            marginTop: \"15px\",\r\n                                            paddingTop: \"3px\",\r\n                                        }}\r\n                                        className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <img\r\n                                                alt=\"coin\"\r\n                                                src={selectedToken1.icon}\r\n                                                style={{\r\n                                                    height: \"35px\",\r\n                                                    width: \"35px\",\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"my-1 col-4\">\r\n                                            <p>\r\n                                                <h5 className=\"text-light\">{selectedToken1.name}</h5>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\" my-1 col-5\">\r\n                                            <FileArrowDown size={25} color=\"white\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p\r\n                                        style={{\r\n                                            color: \"lightgray\",\r\n                                        }}>\r\n                                        Balance : $0.0\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <TokenModal\r\n                        tokenDetails={tokenDetails}\r\n                        show={modalShow}\r\n                        onHide={() => setModalShow(false)}\r\n                        setSelectedToken={setSelectedToken1}\r\n                    />\r\n\r\n                    <div\r\n                        className=\"row my-1\"\r\n                        style={{\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                        }}>\r\n                        <div\r\n                            className=\"col-12 \"\r\n                            style={{\r\n                                backgroundColor: \"#00214e\",\r\n                                borderRadius: \"20px\",\r\n                                height: \"80px\",\r\n                                width: \"90%\",\r\n                                border: \"1px solid rgba(255, 255, 255, 0.2)\",\r\n                            }}>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"0.0\"\r\n                                        style={{\r\n                                            marginTop: \"13px\",\r\n\r\n                                            backgroundColor: \"transparent\",\r\n                                            border: \"none\",\r\n                                            color: \"white\",\r\n                                            fontSize: \"30px\",\r\n                                            outline: \"none\",\r\n                                            placeholder: \"white\",\r\n                                        }}\r\n                                        onFocus={(e) => (e.target.style.outline = \"none\")}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div\r\n                                    onClick={() => {\r\n                                        setModalShow2(true);\r\n                                    }}\r\n                                    className=\"col-4\">\r\n                                    <div\r\n                                        style={{\r\n                                            backgroundColor: \"#183964\",\r\n                                            borderRadius: \"20px\",\r\n                                            height: \"40px\",\r\n                                            marginRight: \"0.1px\",\r\n                                            marginTop: \"15px\",\r\n                                            paddingTop: \"3px\",\r\n                                        }}\r\n                                        className=\"row\">\r\n                                        <div className=\"col-3\">\r\n                                            <img\r\n                                                alt=\"coin\"\r\n                                                src={selectedToken2.icon}\r\n                                                style={{\r\n                                                    height: \"35px\",\r\n                                                    width: \"35px\",\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"my-1 col-4\">\r\n                                            <p>\r\n                                                <h5 className=\"text-light\">{selectedToken2.name}</h5>\r\n                                            </p>\r\n                                        </div>\r\n\r\n                                        <div className=\" my-1 col-5\">\r\n                                            <FileArrowDown size={25} color=\"white\"/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p\r\n                                        style={{\r\n                                            color: \"lightgray\",\r\n                                        }}>\r\n                                        Balance : $0.0\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <TokenModal\r\n                        tokenDetails={tokenDetails}\r\n                        show={modalShow2}\r\n                        onHide={() => setModalShow2(false)}\r\n                        setSelectedToken={setSelectedToken2}\r\n                    />\r\n                </div>\r\n\r\n                <Button\r\n                    className=\"\"\r\n                    onClick={swap}\r\n                    style={{\r\n                        backgroundColor: \"rgba(5, 24, 57, 255)\",\r\n                        borderRadius: \"75px\",\r\n                        position: \"relative\",\r\n                        marginTop: \"65px\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                    }}>\r\n                    S\r\n                </Button>\r\n            </div>\r\n            <div\r\n                className=\"col-12\"\r\n                style={{\r\n                    position: \"absolute\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    marginTop: \"50px\",\r\n                }}>\r\n                <Button\r\n                    variant=\"primary\"\r\n                    className=\" my-5\"\r\n                    onClick={setupState}\r\n                    style={{\r\n                        width: \"75%\",\r\n                        height: \"50px\",\r\n                        borderRadius: \"20px\",\r\n                        backgroundColor: \"#006dfe\",\r\n                        fontSize: \"25px\",\r\n\r\n                        //transparent\r\n                    }}>\r\n                    Change\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}