{
  "version": "0.1.0",
  "name": "anchor_programs",
  "instructions": [
    {
      "name": "initialize",
      "accounts": [
        {
          "name": "authority",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "initializer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "amm",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "poolMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenA",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenB",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "feeAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "destination",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "feesInput",
          "type": {
            "defined": "FeesInput"
          }
        },
        {
          "name": "curveInput",
          "type": {
            "defined": "CurveInput"
          }
        }
      ]
    },
    {
      "name": "swap",
      "accounts": [
        {
          "name": "authority",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "amm",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "userTransferAuthority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "sourceInfo",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "destinationInfo",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "swapSource",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "swapDestination",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "poolMint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "feeAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "hostFeeAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "amountIn",
          "type": "u64"
        },
        {
          "name": "minimumAmountOut",
          "type": "u64"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "Amm",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "isInitialized",
            "docs": [
              "Is the swap initialized, with data written to it"
            ],
            "type": "bool"
          },
          {
            "name": "bumpSeed",
            "docs": [
              "Bump seed used to generate the program address / authority"
            ],
            "type": "u8"
          },
          {
            "name": "tokenProgramId",
            "docs": [
              "Token program ID associated with the swap"
            ],
            "type": "publicKey"
          },
          {
            "name": "tokenAAccount",
            "docs": [
              "Address of token A liquidity account"
            ],
            "type": "publicKey"
          },
          {
            "name": "tokenBAccount",
            "docs": [
              "Address of token B liquidity account"
            ],
            "type": "publicKey"
          },
          {
            "name": "poolMint",
            "docs": [
              "Address of pool token mint"
            ],
            "type": "publicKey"
          },
          {
            "name": "tokenAMint",
            "docs": [
              "Address of token A mint"
            ],
            "type": "publicKey"
          },
          {
            "name": "tokenBMint",
            "docs": [
              "Address of token B mint"
            ],
            "type": "publicKey"
          },
          {
            "name": "poolFeeAccount",
            "docs": [
              "Address of pool fee account"
            ],
            "type": "publicKey"
          },
          {
            "name": "fees",
            "type": {
              "defined": "FeesInput"
            }
          },
          {
            "name": "curve",
            "type": {
              "defined": "CurveInput"
            }
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "CurveFees",
      "docs": [
        "Encapsulates all fee information and calculations for swap operations"
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tradeFeeNumerator",
            "docs": [
              "Trade fees are extra token amounts that are held inside the token",
              "accounts during a trade, making the value of liquidity tokens rise.",
              "Trade fee numerator"
            ],
            "type": "u64"
          },
          {
            "name": "tradeFeeDenominator",
            "docs": [
              "Trade fee denominator"
            ],
            "type": "u64"
          },
          {
            "name": "ownerTradeFeeNumerator",
            "docs": [
              "Owner trading fees are extra token amounts that are held inside the token",
              "accounts during a trade, with the equivalent in pool tokens minted to",
              "the owner of the program.",
              "Owner trade fee numerator"
            ],
            "type": "u64"
          },
          {
            "name": "ownerTradeFeeDenominator",
            "docs": [
              "Owner trade fee denominator"
            ],
            "type": "u64"
          },
          {
            "name": "ownerWithdrawFeeNumerator",
            "docs": [
              "Owner withdraw fees are extra liquidity pool token amounts that are",
              "sent to the owner on every withdrawal.",
              "Owner withdraw fee numerator"
            ],
            "type": "u64"
          },
          {
            "name": "ownerWithdrawFeeDenominator",
            "docs": [
              "Owner withdraw fee denominator"
            ],
            "type": "u64"
          },
          {
            "name": "hostFeeNumerator",
            "docs": [
              "Host fees are a proportion of the owner trading fees, sent to an",
              "extra account provided during the trade.",
              "Host trading fee numerator"
            ],
            "type": "u64"
          },
          {
            "name": "hostFeeDenominator",
            "docs": [
              "Host trading fee denominator"
            ],
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "FeesInput",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "tradeFeeNumerator",
            "type": "u64"
          },
          {
            "name": "tradeFeeDenominator",
            "type": "u64"
          },
          {
            "name": "ownerTradeFeeNumerator",
            "type": "u64"
          },
          {
            "name": "ownerTradeFeeDenominator",
            "type": "u64"
          },
          {
            "name": "ownerWithdrawFeeNumerator",
            "type": "u64"
          },
          {
            "name": "ownerWithdrawFeeDenominator",
            "type": "u64"
          },
          {
            "name": "hostFeeNumerator",
            "type": "u64"
          },
          {
            "name": "hostFeeDenominator",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CurveInput",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "curveType",
            "type": "u8"
          },
          {
            "name": "curveParameters",
            "type": "u64"
          }
        ]
      }
    },
    {
      "name": "CurveType",
      "docs": [
        "Curve types supported by the token-swap program."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "ConstantProduct"
          },
          {
            "name": "ConstantPrice"
          },
          {
            "name": "Stable"
          },
          {
            "name": "Offset"
          }
        ]
      }
    },
    {
      "name": "TradeDirection",
      "docs": [
        "The direction of a trade, since curves can be specialized to treat each",
        "token differently (by adding offsets or weights)"
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "AtoB"
          },
          {
            "name": "BtoA"
          }
        ]
      }
    },
    {
      "name": "RoundDirection",
      "docs": [
        "The direction to round.  Used for pool token to trading token conversions to",
        "avoid losing value on any deposit or withdrawal."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "Floor"
          },
          {
            "name": "Ceiling"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AlreadyInUse",
      "msg": "Swap account already in use"
    },
    {
      "code": 6001,
      "name": "InvalidProgramAddress",
      "msg": "Invalid program address generated from bump seed and key"
    },
    {
      "code": 6002,
      "name": "InvalidOwner",
      "msg": "Input account owner is not the program address"
    },
    {
      "code": 6003,
      "name": "InvalidOutputOwner",
      "msg": "Output pool account owner cannot be the program address"
    },
    {
      "code": 6004,
      "name": "ExpectedMint",
      "msg": "Deserialized account is not an SPL Token mint"
    },
    {
      "code": 6005,
      "name": "ExpectedAccount",
      "msg": "Deserialized account is not an SPL Token account"
    },
    {
      "code": 6006,
      "name": "EmptySupply",
      "msg": "Input token account empty"
    },
    {
      "code": 6007,
      "name": "InvalidSupply",
      "msg": "Pool token mint has a non-zero supply"
    },
    {
      "code": 6008,
      "name": "InvalidDelegate",
      "msg": "Token account has a delegate"
    },
    {
      "code": 6009,
      "name": "InvalidInput",
      "msg": "InvalidInput"
    },
    {
      "code": 6010,
      "name": "IncorrectSwapAccount",
      "msg": "Address of the provided swap token account is incorrect"
    },
    {
      "code": 6011,
      "name": "IncorrectPoolMint",
      "msg": "Address of the provided pool token mint is incorrect"
    },
    {
      "code": 6012,
      "name": "InvalidOutput",
      "msg": "InvalidOutput"
    },
    {
      "code": 6013,
      "name": "CalculationFailure",
      "msg": "General calculation failure due to overflow or underflow"
    },
    {
      "code": 6014,
      "name": "InvalidInstruction",
      "msg": "Invalid instruction"
    },
    {
      "code": 6015,
      "name": "RepeatedMint",
      "msg": "Swap input token accounts have the same mint"
    },
    {
      "code": 6016,
      "name": "ExceededSlippage",
      "msg": "Swap instruction exceeds desired slippage limit"
    },
    {
      "code": 6017,
      "name": "InvalidCloseAuthority",
      "msg": "Token account has a close authority"
    },
    {
      "code": 6018,
      "name": "InvalidFreezeAuthority",
      "msg": "Pool token mint has a freeze authority"
    },
    {
      "code": 6019,
      "name": "IncorrectFeeAccount",
      "msg": "Pool fee token account incorrect"
    },
    {
      "code": 6020,
      "name": "ZeroTradingTokens",
      "msg": "Given pool token amount results in zero trading tokens"
    },
    {
      "code": 6021,
      "name": "FeeCalculationFailure",
      "msg": "Fee calculation failed due to overflow, underflow, or unexpected 0"
    },
    {
      "code": 6022,
      "name": "ConversionFailure",
      "msg": "Conversion to u64 failed with an overflow or underflow"
    },
    {
      "code": 6023,
      "name": "InvalidFee",
      "msg": "The provided fee does not match the program owner's constraints"
    },
    {
      "code": 6024,
      "name": "IncorrectTokenProgramId",
      "msg": "The provided token program does not match the token program expected by the swap"
    },
    {
      "code": 6025,
      "name": "UnsupportedCurveType",
      "msg": "The provided curve type is not supported by the program owner"
    },
    {
      "code": 6026,
      "name": "InvalidCurve",
      "msg": "The provided curve parameters are invalid"
    },
    {
      "code": 6027,
      "name": "UnsupportedCurveOperation",
      "msg": "The operation cannot be performed on the given curve"
    }
  ],
  "metadata": {
    "address": "5xrXqguX2C7asMtSTJy17qnqqZ7aL9Yv2UKtN3ybuhF3"
  }
}